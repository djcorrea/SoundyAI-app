// üß™ TESTE DA CORRE√á√ÉO TRUE PEAK
// Valida se o algoritmo polyphase corrigido funciona corretamente

import { runQuickTruePeakTest, runTruePeakValidationSuite } from './work/lib/audio/features/truepeak.js';

console.log('üöÄ Iniciando teste da corre√ß√£o True Peak...\n');

// Teste r√°pido
console.log('=== TESTE R√ÅPIDO ===');
const quickResult = runQuickTruePeakTest();

if (quickResult.passed) {
  console.log('‚úÖ Teste r√°pido PASSOU - algoritmo corrigido com sucesso!');
} else {
  console.log('‚ùå Teste r√°pido FALHOU - algoritmo ainda tem problemas');
  console.log('Detalhes:', quickResult);
}

console.log('\n=== SUITE COMPLETA DE TESTES ===');

// Suite completa
const suiteResults = runTruePeakValidationSuite();

console.log('\n=== RESUMO FINAL ===');
const passedTests = suiteResults.filter(r => r.passed).length;
const totalTests = suiteResults.length + (quickResult.passed ? 1 : 0);
const totalPassed = passedTests + (quickResult.passed ? 1 : 0);

console.log(`üìä Total de testes: ${totalTests}`);
console.log(`‚úÖ Testes aprovados: ${totalPassed}`);
console.log(`‚ùå Testes falharam: ${totalTests - totalPassed}`);

if (totalPassed === totalTests) {
  console.log('\nüéâ ALGORITMO TRUE PEAK CORRIGIDO COM SUCESSO!');
  console.log('   - Polyphase implementado corretamente');
  console.log('   - Coeficientes normalizados para ganho unit√°rio');
  console.log('   - True Peak >= Sample Peak sempre');
  console.log('   - Sem corre√ß√µes for√ßadas mascarando problemas');
} else {
  console.log('\n‚ö†Ô∏è ALGORITMO AINDA PRECISA DE AJUSTES');
  console.log('   Verifique os logs acima para detalhes dos problemas');
}

console.log('\nüî¨ Teste conclu√≠do!');