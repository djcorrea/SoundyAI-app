import json
from pathlib import Path

print("=" * 70)
print("  VALIDA√á√ÉO COMPLETA - INTEGRA√á√ÉO DO FUNK BH")
print("=" * 70)
print()

BASE_PATH = Path(r"c:\Users\DJ Correa\Desktop\Programa√ß√£o\SoundyAI")
all_valid = True

# 1. Validar funk_bh.json
print("1Ô∏è‚É£  Validando funk_bh.json...")
funk_bh_path = BASE_PATH / "public" / "refs" / "out" / "funk_bh.json"
try:
    with open(funk_bh_path, 'r', encoding='utf-8') as f:
        funk_bh_data = json.load(f)
    
    # Verificar estrutura
    assert "funk_bh" in funk_bh_data
    assert "hybrid_processing" in funk_bh_data["funk_bh"]
    assert "legacy_compatibility" in funk_bh_data["funk_bh"]
    
    legacy = funk_bh_data["funk_bh"]["legacy_compatibility"]
    
    # Verificar m√©tricas
    assert legacy["lufs_target"] == -9.0
    assert legacy["true_peak_target"] == -0.25
    assert legacy["dr_target"] == 7.0
    assert legacy["stereo_target"] == 0.915
    
    # Verificar bandas
    assert "sub" in legacy["bands"]
    assert legacy["bands"]["sub"]["tol_db"] == 0
    assert legacy["bands"]["sub"]["target_range"]["min"] == -29
    assert legacy["bands"]["sub"]["target_range"]["max"] == -23
    
    print("   ‚úÖ funk_bh.json V√ÅLIDO!")
    print(f"      LUFS: {legacy['lufs_target']}, DR: {legacy['dr_target']}, Stereo: {legacy['stereo_target']}")
    print(f"      Bandas: 8 bandas com tol_db=0")
    
except Exception as e:
    print(f"   ‚ùå ERRO: {e}")
    all_valid = False

print()

# 2. Validar genres.json
print("2Ô∏è‚É£  Validando genres.json...")
genres_path = BASE_PATH / "public" / "refs" / "out" / "genres.json"
try:
    with open(genres_path, 'r', encoding='utf-8') as f:
        genres_data = json.load(f)
    
    genre_keys = [g["key"] for g in genres_data["genres"]]
    
    if "funk_bh" in genre_keys:
        funk_bh_genre = next(g for g in genres_data["genres"] if g["key"] == "funk_bh")
        print(f"   ‚úÖ funk_bh encontrado no manifesto!")
        print(f"      Label: {funk_bh_genre['label']}")
        print(f"      Total de g√™neros: {len(genre_keys)}")
    else:
        print("   ‚ùå funk_bh N√ÉO encontrado no manifesto!")
        all_valid = False
        
except Exception as e:
    print(f"   ‚ùå ERRO: {e}")
    all_valid = False

print()

# 3. Validar scoring-v2-config.json
print("3Ô∏è‚É£  Validando scoring-v2-config.json...")
scoring_path = BASE_PATH / "config" / "scoring-v2-config.json"
try:
    with open(scoring_path, 'r', encoding='utf-8') as f:
        scoring_data = json.load(f)
    
    if "funk_bh" in scoring_data.get("targets_by_genre", {}):
        funk_bh_config = scoring_data["targets_by_genre"]["funk_bh"]
        print(f"   ‚úÖ funk_bh encontrado na configura√ß√£o de scoring!")
        print(f"      LUFS target: {funk_bh_config['lufs']['target']}")
        print(f"      DR target: {funk_bh_config['dr']['target']}")
        print(f"      Bandas configuradas: {len([k for k in funk_bh_config.keys() if k.startswith('band_')])}")
    else:
        print("   ‚ùå funk_bh N√ÉO encontrado no scoring!")
        all_valid = False
        
except Exception as e:
    print(f"   ‚ùå ERRO: {e}")
    all_valid = False

print()

# 4. Validar index.html (verificar se o arquivo foi atualizado)
print("4Ô∏è‚É£  Validando index.html...")
index_path = BASE_PATH / "public" / "index.html"
try:
    with open(index_path, 'r', encoding='utf-8') as f:
        index_content = f.read()
    
    if 'data-genre="funk_bh"' in index_content and 'Funk BH' in index_content:
        print("   ‚úÖ Bot√£o do Funk BH encontrado no modal!")
        print("   ‚úÖ Op√ß√£o do Funk BH encontrada no select!")
    else:
        print("   ‚ùå Funk BH N√ÉO encontrado no HTML!")
        all_valid = False
        
except Exception as e:
    print(f"   ‚ùå ERRO: {e}")
    all_valid = False

print()
print("=" * 70)

if all_valid:
    print("üéâ VALIDA√á√ÉO COMPLETA - FUNK BH INTEGRADO COM SUCESSO!")
    print()
    print("üìã RESUMO:")
    print("   ‚úÖ funk_bh.json criado e v√°lido")
    print("   ‚úÖ Adicionado ao genres.json")
    print("   ‚úÖ Configurado no scoring-v2-config.json")
    print("   ‚úÖ Bot√£o adicionado no modal de g√™neros")
    print("   ‚úÖ Op√ß√£o adicionada no select")
    print()
    print("üéØ O Funk BH est√° pronto para uso!")
else:
    print("‚ö†Ô∏è  ALGUNS PROBLEMAS FORAM ENCONTRADOS. VERIFIQUE ACIMA.")

print("=" * 70)
