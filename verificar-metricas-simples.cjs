const { Client } = require('pg');

async function verificar(jobId) {
    const client = new Client({
        connectionString: 'postgresql://postgres:SoundyAI2024@monorail.proxy.rlwy.net:47813/railway'
    });

    try {
        await client.connect();
        
        const result = await client.query('SELECT id, status, result FROM jobs WHERE id = $1', [jobId]);
        
        if (result.rows.length === 0) {
            console.log('‚ùå Job n√£o encontrado');
            return;
        }

        const job = result.rows[0];
        console.log(`‚úÖ Job ${job.id}: ${job.status}`);
        
        if (job.result && typeof job.result === 'object') {
            console.log('\nüîç Verificando m√©tricas espectrais...');
            
            const resultado = job.result;
            
            // Verificar m√©tricas espec√≠ficas
            const metricas = [
                'spectralCentroidHz',
                'spectralRolloffHz', 
                'spectralFlatness',
                'bandEnergies',
                'frequenciaCentral',
                'limiteAgudos85'
            ];
            
            console.log('üìä M√©tricas encontradas:');
            metricas.forEach(metrica => {
                if (resultado[metrica] !== undefined) {
                    console.log(`‚úÖ ${metrica}: ${JSON.stringify(resultado[metrica])}`);
                } else {
                    console.log(`‚ùå ${metrica}: ausente`);
                }
            });
            
            // Verificar se h√° dados de scoring
            if (resultado.scoring) {
                console.log('\nüéØ Informa√ß√µes de scoring:');
                console.log(`‚îú‚îÄ Score total: ${resultado.scoring.totalScore}`);
                
                if (resultado.scoring.categories && resultado.scoring.categories.spectral) {
                    console.log(`‚îú‚îÄ Score espectral: ${resultado.scoring.categories.spectral.score}`);
                    console.log(`‚îú‚îÄ Peso espectral: ${resultado.scoring.categories.spectral.weight}`);
                } else {
                    console.log(`‚îú‚îÄ ‚ùå Categoria spectral ausente no scoring`);
                }
            }
            
        } else {
            console.log('‚ùå Resultado n√£o √© um objeto v√°lido');
        }

    } catch (error) {
        console.error('‚ùå Erro:', error.message);
    } finally {
        await client.end();
    }
}

const jobId = process.argv[2] || 'a8aa91bb-95bb-4d09-afd5-0304179aa433';
verificar(jobId);